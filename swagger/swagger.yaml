openapi: "3.0.2"
info:
  title: "Library API"
  version: "1.0.0"
  description: "A simple Express Massage Reservation System API"
tags:
  - name: "Authentications"
    description: "Authentication operations"
  - name: "Massage Shops"
    description: "Massage shop operations"
  - name: "Users"
    description: "User operations"
  - name: "Reservations"
    description: "Reservation operations"
components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "The auto-generated id of the user"
          example: "661268a31c28dc934e488243"
        email:
          type: "string"
          format: "email"
          description: "User email"
          example: "user@email.com"
        name:
          type: "string"
          description: "User name"
          example: "John Doe"
        tel:
          type: "string"
          description: "User telephone number"
          example: "0812345678"
        role:
          type: "string"
          description: "User role"
          example: "user"
          enum:
            - "user"
            - "admin"
        createdAt:
          type: "string"
          format: "date-time"
          description: "User created date"
          example: "2021-01-01T00:00:00.000Z"
    UserLogin:
      type: "object"
      required:
        - "email"
        - "password"
      properties:
        email:
          type: "string"
          description: "User email"
          example: "user@email.com"
        password:
          type: "string"
          description: "User password"
          example: "password"
    UserResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Login success status"
        token:
          type: "string"
          description: "JWT token"
        data:
          $ref: "#/components/schemas/User"
    UserRegister:
      type: "object"
      required:
        - "email"
        - "password"
        - "name"
        - "tel"
      properties:
        email:
          type: "string"
          format: "email"
          description: "User email"
          example: "user@email.com"
        password:
          type: "string"
          description: "User password"
          example: "password"
        name:
          type: "string"
          description: "User name"
          example: "John Doe"
        tel:
          type: "string"
          description: "User telephone number"
          example: "0812345678"
        role:
          type: "string"
          description: "User role"
          example: "user"
          default: "user"
          enum:
            - "user"
            - "admin"
    MeResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Get user success status"
        data:
          $ref: "#/components/schemas/User"

    OTP:
      type: "object"
      properties:
        otp:
          type: "string"
          description: "One-time password for reset password"
          example: "2A325C"
        email:
          type: "string"
          format: "email"
          description: "User email"
          example: "user@email.com"
        createdAt:
          type: "string"
          format: "date-time"
          description: "OTP created date"
          example: "2021-01-01T00:00:00.000Z"
    SendOTPResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Send OTP success status"
        msg:
          type: "string"
          description: "Message"
          example: "OTP sent to user@email.com"
    ValOTPResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Validate OTP success status"
        msg:
          type: "string"
          description: "Message"
          example: "OTP validated"
        token:
          type: "string"
          description: "JWT token"

    MassageShop:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "The auto-generated id of the massage shop"
          example: "661268a31c28dc934e488243"
        name:
          type: "string"
          description: "Massage shop name"
          example: "Massage Shop"
        tel:
          type: "string"
          description: "Massage shop telephone number"
          example: "0812345678"
        address:
          type: "string"
          description: "Massage shop address"
          example: "123/456 Street"
        district:
          type: "string"
          description: "Massage shop district"
          example: "Pathumwan"
        province:
          type: "string"
          description: "Massage shop province"
          example: "Bangkok"
        postalcode:
          type: "string"
          description: "Massage shop postal code"
          example: "10330"
        open:
          type: "string"
          description: "Massage shop open time"
          example: "09:00"
        close:
          type: "string"
          description: "Massage shop close time"
          example: "18:00"

    ShopWithReservations:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "The auto-generated id of the massage shop"
          example: "661268a31c28dc934e488243"
        name:
          type: "string"
          description: "Massage shop name"
          example: "Massage Shop"
        tel:
          type: "string"
          description: "Massage shop telephone number"
          example: "0812345678"
        address:
          type: "string"
          description: "Massage shop address"
          example: "123/456 Street"
        district:
          type: "string"
          description: "Massage shop district"
          example: "Pathumwan"
        province:
          type: "string"
          description: "Massage shop province"
          example: "Bangkok"
        postalcode:
          type: "string"
          description: "Massage shop postal code"
          example: "10330"
        open:
          type: "string"
          description: "Massage shop open time"
          example: "09:00"
        close:
          type: "string"
          description: "Massage shop close time"
          example: "18:00"
        reservations:
          type: "array"
          items:
            $ref: "#/components/schemas/Reservation"

    CreateShopRequest:
      type: "object"
      required:
        - name
        - tel
        - address
        - province
        - postalcode
        - open
        - close
      properties:
        name:
          type: "string"
          description: "Massage shop name"
          example: "Massage Shop"
        tel:
          type: "string"
          description: "Massage shop telephone number"
          example: "0812345678"
        address:
          type: "string"
          description: "Massage shop address"
          example: "123/456 Street"
        district:
          type: "string"
          description: "Massage shop district"
          example: "Pathumwan"
        province:
          type: "string"
          description: "Massage shop province"
          example: "Bangkok"
        postalcode:
          type: "string"
          description: "Massage shop postal code"
          example: "10330"
        open:
          type: "string"
          description: "Massage shop open time"
          example: "09:00"
        close:
          type: "string"
          description: "Massage shop close time"
          example: "18:00"

    UpdateShopsRequest:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Massage shop name"
          example: "Massage Shop"
        tel:
          type: "string"
          description: "Massage shop telephone number"
          example: "0812345678"
        address:
          type: "string"
          description: "Massage shop address"
          example: "123/456 Street"
        district:
          type: "string"
          description: "Massage shop district"
          example: "Pathumwan"
        province:
          type: "string"
          description: "Massage shop province"
          example: "Bangkok"
        postalcode:
          type: "string"
          description: "Massage shop postal code"
          example: "10330"
        open:
          type: "string"
          description: "Massage shop open time"
          example: "09:00"
        close:
          type: "string"
          description: "Massage shop close time"
          example: "18:00"

    GetAllShopsResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Get all shops success status"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/ShopWithReservations"
        count:
          type: "integer"
          description: "Number of shops"
          example: 1
        paginations:
          type: "object"
          properties:
            prev:
              type: "object"
              properties:
                page:
                  type: "integer"
                  description: "Previous page number"
                  example: 1
                limit:
                  type: "integer"
                  description: "Limit number of items"
                  example: 10
            next:
              type: "object"
              properties:
                page:
                  type: "integer"
                  description: "Next page number"
                  example: 2
                limit:
                  type: "integer"
                  description: "Limit number of items"
                  example: 10
    GetShopResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Get shop success status"
        data:
          $ref: "#/components/schemas/MassageShop"

    GetShopResponseWithReservations:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Get shop success status"
        data:
          $ref: "#/components/schemas/ShopWithReservations"

    Reservation:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "The auto-generated id of the reservation"
          example: "661268a31c28dc934e488243"
        apptDate:
          type: "string"
          format: "date-time"
          description: "Appointment date and time"
          example: "2021-01-01T09:00:00.000Z"
        createdAt:
          type: "string"
          format: "date-time"
          description: "Reservation created date"
          example: "2021-01-01T00:00:00.000Z"
        user:
          type: "string"
          format: "uuid"
          description: "User id who make reservation"
          example: "661268a31c28dc934e488243"
        massageShop:
          type: "string"
          format: "uuid"
          description: "Massage shop id where reservation made"
          example: "661268a31c28dc934e488243"

    AddReservationResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Add reservation success status"
        data:
          $ref: "#/components/schemas/Reservation"

paths:
  /auth/login:
    post:
      tags:
        - "Authentications"
      summary: "Login"
      description: "Login to the system"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal server error"

  /auth/register:
    post:
      tags:
        - "Authentications"
      summary: "Register"
      description: "Register to the system"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "200":
          description: "Register successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /auth/logout:
    get:
      tags:
        - "Authentications"
      summary: "Logout"
      security:
        - bearerAuth: []
      description: "Logout from the system"
      responses:
        "200":
          description: "Logout successful"
        "500":
          description: "Internal server error"
  /auth/me:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Authentications"
      summary: "Get my information"
      description: "Get user information"
      responses:
        "200":
          description: "Get user successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeResponse"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal server error"
  /auth/otp/send:
    post:
      tags:
        - "Authentications"
      summary: "Send OTP to email"
      description: "Send OTP to user email for reset password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  $ref: "#/components/schemas/OTP/properties/email"
      responses:
        "200":
          description: "Send OTP successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendOTPResponse"
        "400":
          description: "Some error"
        "500":
          description: "Internal server error"
  /auth/otp/val:
    post:
      tags:
        - "Authentications"
      summary: "Validate OTP"
      description: "Validate OTP for reset password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  $ref: "#/components/schemas/OTP/properties/email"
                otp:
                  $ref: "#/components/schemas/OTP/properties/otp"
      responses:
        "200":
          description: "OTP validated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValOTPResponse"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"

  /shops:
    get:
      tags:
        - "Massage Shops"
      summary: "Get all shops"
      security:
        - bearerAuth: []
      description: "Get all massage shops"
      parameters:
        - in: "query"
          name: "select"
          schema:
            type: "string"
          description: "Select fields to return"
        - in: "query"
          name: "sort"
          schema:
            type: "string"
          description: "Sort fields"
        - in: "query"
          name: "page"
          schema:
            type: "integer"
          description: "Page number"
        - in: "query"
          name: "limit"
          schema:
            type: "integer"
          description: "Limit number of items"

      responses:
        "200":
          description: "Get all shops successful"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetAllShopsResponse"
        "500":
          description: "Internal server error"
    post:
      tags:
        - "Massage Shops"
      summary: "Create shop"
      security:
        - bearerAuth: []
      description: "Create massage shop"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateShopRequest"
      responses:
        "200":
          description: "Create shop successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetShopResponse"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /shops/{id}:
    get:
      tags:
        - "Massage Shops"
      summary: "Get shop by id"
      security:
        - bearerAuth: []
      description: "Get massage shop by id"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
          description: "Shop id"
      responses:
        "200":
          description: "Get shop by id successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetShopResponseWithReservations"
        "404":
          description: "Shop not found"
        "500":
          description: "Internal server error"
    put:
      tags:
        - "Massage Shops"
      summary: "Update shop by id"
      security:
        - bearerAuth: []
      description: "Update massage shop by id"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
          description: "Shop id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateShopsRequest"
      responses:
        "200":
          description: "Update shop by id successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetShopResponse"
        "400":
          description: "Some error"
        "500":
          description: "Internal server error"
    delete:
      tags:
        - "Massage Shops"
      summary: "Delete shop by id"
      security:
        - bearerAuth: []
      description: "Delete massage shop by id"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
          description: "Shop id"
      responses:
        "200":
          description: "Delete shop by id successful"
        "400":
          description: "Some error"

  /users/password/reset:
    post:
      tags:
        - "Users"
      summary: "Reset password"
      description: "Reset user password after validate OTP"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  type: "string"
                  description: "New password"
                  example: "newpassword"
      responses:
        "200":
          description: "Reset password successful"
        "400":
          description: "Some error"
        "500":
          description: "Internal server error"
  /shops/{id}/reservations:
    post:
      tags:
        - "Reservations"
      summary: "Create reservation"
      description: "Create reservation for massage shop atmost 3 reservations per user"
      security:
        - bearerAuth: []
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
          description: "Shop id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                apptDate:
                  type: "string"
                  format: "date-time"
                  description: "Appointment date and time"
                  example: "2021-01-01T09:00:00.000Z"
      responses:
        "201":
          description: "Create reservation successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddReservationResponse"
        "400":
          description: "Some error"
        "500":
          description: "Internal server error"
  /hospitals:
    get:
      tags: 
        - "Reservations"
      summary: Returns the list of all the reservations
      description: "If user role: get all his/her reservations\nIf admin role: get all reservations in system"
      security:
        - bearerAuth: []
      responses:
        200:
          description: The list of the hospitals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservations'
